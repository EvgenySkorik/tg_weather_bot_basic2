import telebot
from settings import SiteSettings
from datetime import datetime
from tg_handler import TgInterface

tg_bot = SiteSettings()
bot = telebot.TeleBot(tg_bot.tg_api)
func_handler = TgInterface()
foto_fact: dict = func_handler.get_foto()
foto_fact_it = iter(foto_fact.items())


@bot.message_handler(commands=['start', 'low', 'high', 'custom', 'history'])
def start(message):
    """–§—É–Ω–∫—Ü–∏—è - –º–µ–Ω—é, –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, —Å–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –∏ –ª–æ–≥–∏–∫—É –∫–æ–º–∞–Ω–¥"""

    if message.text == '/start':
        answer = '–î–æ–±—Ä—ã–π –¥–µ–Ω—å' if 6 < datetime.now().hour < 17 else '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä'
        markup = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        bt1 = telebot.types.KeyboardButton('–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ')
        bt2 = telebot.types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–∞–º')
        bt3 = telebot.types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö')
        markup.add(bt1, bt2, bt3)
        bot.send_message(message.chat.id,
                         f'{answer} <b>{message.from_user.first_name}!</b> –í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ '
                         f'–Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∏–∑ –º–µ–Ω—é\n', reply_markup=markup, parse_mode='html')
        bot.send_message(message.chat.id, 'üåó')

    elif message.text == '/low':
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è:')
        bot.register_next_step_handler(message, func_handler.get_weather_min)
    elif message.text == '/high':
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è:')
        bot.register_next_step_handler(message, func_handler.get_weather_max)
    elif message.text == '/history':
        bot.send_message(message.chat.id, '<b>–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø—Ä–æ—Å–æ–≤:</b>', parse_mode='html')
        func_handler.history(message)
    elif message.text == '/custom':
        bot.send_message(message.chat.id, '<b>–°–µ–∫—Ä–µ—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—Å</b>', parse_mode='html')
        bot.send_message(message.chat.id, message)
        with open('../site_api_weather/utils/cat.jpg', 'rb') as f:
            bot.send_photo(message.chat.id, f)
    else:
        bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–ª–∏ –º–µ–Ω—é.')


@bot.message_handler(content_types=['text'])
def menu(message):
    '''–§—É–Ω–∫—Ü–∏—è - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫ –∏–∑ –º–µ–Ω—é, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä'''

    if message.text.lower() == '—É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ':
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –±–æ—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∞–Ω–≥–ª–∏—Å–∫–æ–º –∏–ª–∏ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ')
        bot.register_next_step_handler(message, func_handler.get_weather)
    elif message.text.lower() == '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–∞–º':
        func_handler.info(message)
    elif message.text.lower() == '–ø–æ–≥–æ–¥–∞ –≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö':
        global foto_fact_it
        global foto_fact
        try:
            path = next(foto_fact_it)
            with open(path[0], 'rb') as f:
                bot.send_message(message.chat.id, path[1])
                bot.send_photo(message.chat.id, f)
        except Exception:
            foto_fact_it = iter(foto_fact.items())

    else:
        bot.send_message(message.chat.id,
                         f'{message.from_user.first_name}, –≤—ã –≤–≤–µ–ª–∏: {message.text}, \n<b>–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å '
                         f'–∫–Ω–æ–ø–∫–∞–º–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –º–µ–Ω—é</b>', parse_mode='html')


while True:
    try:
        if __name__ == '__main__':
            bot.polling(none_stop=True)
    except:
        continue
